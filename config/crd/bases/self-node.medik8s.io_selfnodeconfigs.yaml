
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: selfnodeconfigs.self-node.medik8s.io
spec:
  group: self-node.medik8s.io
  names:
    kind: SelfNodeConfig
    listKind: SelfNodeConfigList
    plural: selfnodeconfigs
    shortNames:
    - ppc
    - ppconfig
    singular: selfnodeconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SelfNodeConfig is the Schema for the selfnodeconfigs API in which
          a user can configure the self node agents
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SelfNodeConfigSpec defines the desired state of SelfNodeConfig
            properties:
              apiCheckInterval:
                default: 15s
                description: the frequency for api-server connectivity check Valid
                  time units are "ms", "s", "m", "h". the frequency for api-server
                  connectivity check
                pattern: ^(0|([0-9]+(\.[0-9]+)?(ms|s|m|h)))$
                type: string
              apiServerTimeout:
                default: 5s
                description: Valid time units are "ms", "s", "m", "h". timeout for
                  each api-connectivity check
                pattern: ^(0|([0-9]+(\.[0-9]+)?(ms|s|m|h)))$
                type: string
              isSoftwareRebootEnabled:
                default: true
                description: IsSoftwareRebootEnabled indicates whether self node agent
                  will do software reboot, if the watchdog device can not be used
                  or will use watchdog only, without a fallback to software reboot
                type: boolean
              maxApiErrorThreshold:
                default: 3
                description: after this threshold, the node will start contacting
                  its peers
                minimum: 1
                type: integer
              peerApiServerTimeout:
                default: 5s
                description: Valid time units are "ms", "s", "m", "h".
                pattern: ^(0|([0-9]+(\.[0-9]+)?(ms|s|m|h)))$
                type: string
              peerDialTimeout:
                default: 5s
                description: Valid time units are "ms", "s", "m", "h". timeout for
                  establishing connection to peer
                pattern: ^(0|([0-9]+(\.[0-9]+)?(ms|s|m|h)))$
                type: string
              peerRequestTimeout:
                default: 5s
                description: Valid time units are "ms", "s", "m", "h". timeout for
                  each peer request
                pattern: ^(0|([0-9]+(\.[0-9]+)?(ms|s|m|h)))$
                type: string
              peerUpdateInterval:
                default: 15m
                description: Valid time units are "ms", "s", "m", "h".
                pattern: ^(0|([0-9]+(\.[0-9]+)?(ms|s|m|h)))$
                type: string
              safeTimeToAssumeNodeRebootedSeconds:
                default: 180
                description: SafeTimeToAssumeNodeRebootedSeconds is the time after
                  which the healthy self node agents will assume the unhealthy node
                  has been rebooted and it is safe to remove the node from the cluster.
                  This is extremely important. Deleting a node while the workload
                  is still running there might lead to data corruption and violation
                  of run-once semantic.
                minimum: 0
                type: integer
              watchdogFilePath:
                default: /dev/watchdog
                description: WatchdogFilePath is the watchdog file path that should
                  be available on each node, e.g. /dev/watchdog
                type: string
            type: object
          status:
            description: SelfNodeConfigStatus defines the observed state of SelfNodeConfig
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
