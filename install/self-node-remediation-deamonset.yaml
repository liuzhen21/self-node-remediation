apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: self-node-remediation-ds
  namespace: {{.Namespace}}
  labels:
    k8s-app: self-node-remediation
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      creationTimestamp: null
      labels:
        control-plane: controller-manager
        app: self-node-remediation-agent
    spec:
      volumes:
        - name: devices
          hostPath:
            path: /dev
            type: Directory
      serviceAccountName: self-node-remediation-controller-manager
      priorityClassName: system-node-critical
      hostPID: true
      containers:
      - args:
        - --is-manager=false
        command:
        - /manager
        env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: DEPLOYMENT_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WATCHDOG_PATH
            value: {{.WatchdogPath}}
          - name: TIME_TO_ASSUME_NODE_REBOOTED
            value: {{.TimeToAssumeNodeRebooted}}
          - name: PEER_API_SERVER_TIMEOUT
            value: "{{.PeerApiServerTimeout}}"
          - name: API_CHECK_INTERVAL
            value: "{{.ApiCheckInterval}}"
          - name: PEER_UPDATE_INTERVAL
            value: "{{.PeerUpdateInterval}}"
          - name: API_SERVER_TIMEOUT
            value: "{{.ApiServerTimeout}}"
          - name: PEER_DIAL_TIMEOUT
            value: "{{.PeerDialTimeout}}"
          - name: PEER_REQUEST_TIMEOUT
            value: "{{.PeerRequestTimeout}}"
          - name: MAX_API_ERROR_THRESHOLD
            value: "{{.MaxApiErrorThreshold}}"
          - name: IS_SOFTWARE_REBOOT_ENABLED
            value: {{.IsSoftwareRebootEnabled}}
          - name: IS_REBOOT_DISABLED
            value: {{.IsRebootDisabled}}
          - name: END_POINT_HEALTH_CHECK_URL
            value: {{.EndpointHealthCheckUrl}}
        image: {{.Image}}
        imagePullPolicy: Always
        volumeMounts:
          - name: devices
            mountPath: /dev
        securityContext:
          privileged: true
          hostPID: true
        name: manager
        ports:
        - containerPort: 30001
          hostPort: 30001
          name: self-n-r-port
          protocol: TCP
        resources:
          requests:
            cpu: 20m
            memory: 60Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
      tolerations:
        - key: "medik8s.io/remediation"
          operator: "Equal"
          value: "self-node-remediation"
          effect: "NoExecute"
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Equal"
          effect: "NoSchedule"
